{
  "name": "ember-calendar",
  "version": "0.1.4",
  "description": "An awesome Ember calendar",
  "directories": {
    "doc": "doc",
    "test": "tests"
  },
  "scripts": {
    "start": "ember server",
    "build": "ember build",
    "test": "ember try:testall"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alphasights/ember-calendar.git"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "broccoli-asset-rev": "2.1.0",
    "broccoli-sass": "0.6.6",
    "ember-cli": "1.13.1",
    "ember-cli-app-version": "0.3.5",
    "ember-cli-autoprefixer": "0.4.1",
    "ember-cli-dependency-checker": "1.0.1",
    "ember-cli-htmlbars": "0.7.9",
    "ember-cli-htmlbars-inline-precompile": "0.2.0",
    "ember-cli-inject-live-reload": "1.3.1",
    "ember-cli-paint": "1.10.6",
    "ember-cli-qunit": "0.3.15",
    "ember-cli-uglify": "1.2.0",
    "ember-data": "1.13.5",
    "ember-disable-proxy-controllers": "1.0.0",
    "ember-export-application-global": "1.0.2",
    "ember-try": "0.0.7"
  },
  "dependencies": {
    "ember-cli-babel": "5.0.0",
    "ember-cli-moment-shim": "0.6.1",
    "ember-component-inbound-actions": "0.0.3",
    "ember-moment": "3.5.0",
    "ember-rl-dropdown": "0.5.0",
    "liquid-fire": "0.21.2"
  },
  "keywords": [
    "ember-addon"
  ],
  "ember-addon": {
    "configPath": "tests/dummy/config",
    "demoURL": "https://alphasights.github.io/ember-calendar/demo"
  },
  "readme": "<h1><img src=\"https://raw.githubusercontent.com/alphasights/ember-calendar/develop/images/logo.png\" alt=\"Ember Calendar\" width=\"340px\"></h1>\n\n[![Npm Version](https://badge.fury.io/js/ember-calendar.svg)](http://badge.fury.io/js/ember-calendar)\n[![Ember Observer Score](http://emberobserver.com/badges/ember-calendar.svg)](http://emberobserver.com/addons/ember-calendar)\n[![Code\nClimate](https://codeclimate.com/github/alphasights/ember-calendar/badges/gpa.svg)](https://codeclimate.com/github/alphasights/ember-calendar)\n[![Build Status](https://circleci.com/gh/alphasights/ember-calendar.svg?style=shield&circle-token=6fa581b50c5f8496cf26768394cf6c1d43dfb98e)](https://circleci.com/gh/alphasights/ember-calendar)\n\nAn awesome Ember calendar, designed with composability and reusability in mind.\n\n![Calendar in\naction](https://raw.githubusercontent.com/alphasights/ember-calendar/develop/images/calendar.png)\n\n[Check out the demo](https://alphasights.github.io/ember-calendar/demo)\n\n## Features\n\n* Click to add occurrences\n* Resize occurrences\n* Drag and drop occurrences\n* Timezone aware\n* Search and change timezones\n\n## Installation\n\n`ember install ember-calendar`\n\n## Philosophy\n\nFollowing the principle \"Data down, Actions up\", the calendar sends these\nactions up:\n\n* `onAddOccurrence`\n* `onUpdateOccurrence`\n* `onRemoveOccurrence`\n\nIn addition, you need to provide an `occurrences` Ember Array to the component.\nEach occurrence should have these properties:\n\n* `title`\n* `startsAt`\n* `endsAt`\n\nThe component never mutates your data, but merely decorates them and uses these\nproxies to display the occurrences in the calendar. In the case you need to access\nthe original object in the template, it is available as `occurrence.content`.\n\n## Basic Usage\n\n```htmlbars\n{{! app/templates/index.hbs }}\n\n{{as-calendar\n  title=\"Ember Calendar\"\n  occurrences=occurrences\n  defaultTimeZoneQuery=\"New York|London|Dubai|Hong Kong\"\n  dayStartingTime=\"9:00\"\n  dayEndingTime=\"18:00\"\n  timeSlotDuration=\"00:30\"\n  onAddOccurrence=\"calendarAddOccurrence\"\n  onUpdateOccurrence=\"calendarUpdateOccurrence\"\n  onRemoveOccurrence=\"calendarRemoveOccurrence\"}}\n```\n\n```javascript\n// app/controllers/index.js\n\nimport Ember from 'ember';\n\nexport default Ember.Controller.extend({\n  occurrences: Ember.A(),\n\n  actions: {\n    calendarAddOccurrence: function(occurrence) {\n      this.get('occurrences').pushObject(Ember.Object.create({\n        title: occurrence.get('title'),\n        startsAt: occurrence.get('startsAt'),\n        endsAt: occurrence.get('endsAt')\n      }));\n    },\n\n    calendarUpdateOccurrence: function(occurrence, properties) {\n      occurrence.setProperties(properties);\n    },\n\n    calendarRemoveOccurrence: function(occurrence) {\n      this.get('occurrences').removeObject(occurrence);\n    }\n  }\n});\n```\n\n## Advanced Usage\n\nAll the components which are used in the calendar are highly reusable. For\nexample, you can customize the appearance of the occurrences by passing a block:\n\n```htmlbars\n{{#as-calendar\n  title=\"Schedule call\"\n  occurrences=occurrences\n  dayStartingTime=\"7:00\"\n  dayEndingTime=\"21:30\"\n  timeSlotDuration=\"00:30\"\n  timeZoneOptions=timeZoneOptions\n  showTimeZoneSearch=false\n  timeZone=timeZone\n  onAddOccurrence=\"calendarAddOccurrence\" as |occurrence timetable calendar|}}\n  {{#if occurrence.content.isEditable}}\n    {{as-calendar/timetable/occurrence\n      class=\"selection\"\n      model=occurrence\n      timeSlotHeight=calendar.timeSlotHeight\n      timetable=timetable\n      timeSlotDuration=calendar.timeSlotDuration\n      isResizable=false\n      onUpdate=\"calendarUpdateOccurrence\"\n      onRemove=\"calendarRemoveOccurrence\"}}\n  {{else}}\n    {{as-calendar/occurrence\n      model=occurrence\n      timeSlotHeight=calendar.timeSlotHeight\n      timeSlotDuration=calendar.timeSlotDuration}}\n  {{/if}}\n{{/as-calendar}}\n```\n\nIn this example, we check if the original occurrence is editable and either show\nan occurrence which can be interacted with (`as-calendar/timetable/occurrence`)\nor just a static occurrence (`as-calendar/occurrence`). Furthermore, the nested\ncomponents try to assume as less as possible about their ancestors, so we pass\nin most of their attributes manually.\n\nYou can customize the time slots by passing these options:\n\n* `dayStartingTime`\n* `dayEndingTime`\n* `timeSlotDuration`\n* `timeSlotHeight`\n* `defaultOccurrenceTitle`\n* `defaultOccurrenceDuration`\n\nIn addition, you can customize the timezone handling using these options:\n\n* `timeZone`\n* `timeZoneOptions`\n* `defaultTimeZoneQuery`\n* `showTimeZoneSearch`\n\n## Styles\n\nWe do not add any vendor CSS to your app by default, but you can include it if you want by doing:\n\n```scss\n// app/styles/app.scss\n\n@import 'addons/ember-calendar/main';\n```\n\nBear in mind that the default styles require `ember-cli-paint`. To install it, run:\n\n`ember install ember-cli-paint`\n\n## Developing\n\n### Setup\n\n* `git clone https://github.com/alphasights/ember-calendar.git`\n* `npm install && bower install`\n\n### Running\n\n* `ember server`\n\n### Running Tests\n\n* `ember test --server`\n\n## Credits\n\n* [ember-sortable](https://github.com/jgwhite/ember-sortable)\n",
  "readmeFilename": "README.md",
  "gitHead": "4cfdf56bd13cb368ed5320fa99e2ba919da305c3",
  "bugs": {
    "url": "https://github.com/alphasights/ember-calendar/issues"
  },
  "homepage": "https://github.com/alphasights/ember-calendar#readme",
  "_id": "ember-calendar@0.1.4",
  "_shasum": "bade7893dbe387e545866f2bd53794571c350697",
  "_from": ".../lib/ember/ember-calendar",
  "_resolved": "file:.../lib/ember/ember-calendar"
}
