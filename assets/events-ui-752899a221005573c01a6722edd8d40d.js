define("events-ui/adapters/application",["exports","ember-data"],function(e,t){"use strict";e["default"]=t["default"].RESTAdapter.extend({namespace:"api"})}),define("events-ui/app",["exports","ember","ember/resolver","ember/load-initializers","events-ui/config/environment"],function(e,t,n,r,a){"use strict";var i;t["default"].MODEL_FACTORY_INJECTIONS=!0,i=t["default"].Application.extend({modulePrefix:a["default"].modulePrefix,podModulePrefix:a["default"].podModulePrefix,Resolver:n["default"]}),r["default"](i,a["default"].modulePrefix),e["default"]=i}),define("events-ui/controllers/array",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Controller}),define("events-ui/controllers/object",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Controller}),define("events-ui/initializers/export-application-global",["exports","ember","events-ui/config/environment"],function(e,t,n){"use strict";function r(e,r){if(n["default"].exportApplicationGlobal!==!1){var a,i=n["default"].exportApplicationGlobal;a="string"==typeof i?i:t["default"].String.classify(n["default"].modulePrefix),window[a]||(window[a]=r,r.reopen({willDestroy:function(){this._super.apply(this,arguments),delete window[a]}}))}}e.initialize=r,e["default"]={name:"export-application-global",initialize:r}}),define("events-ui/instance-initializers/app-version",["exports","events-ui/config/environment","ember"],function(e,t,n){"use strict";var r=n["default"].String.classify,a=!1;e["default"]={name:"App Version",initialize:function(e){if(!a){var i=r(e.toString());n["default"].libraries.register(i,t["default"].APP.version),a=!0}}}}),define("events-ui/models/area",["exports","ember-data"],function(e,t){"use strict";e["default"]=t["default"].Model.extend({contains:t["default"].attr(),image_url:t["default"].attr("string")})}),define("events-ui/router",["exports","ember","events-ui/config/environment"],function(e,t,n){"use strict";var r=t["default"].Router.extend({location:n["default"].locationType});r.map(function(){this.route("area",{path:"area/:area_id"})}),e["default"]=r}),define("events-ui/routes/area",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Route.extend({model:function(e){return console.log("t",this.store.find("area",e.area_id)),this.store.find("area",e.area_id)}})}),define("events-ui/templates/application",["exports"],function(e){"use strict";e["default"]=Ember.HTMLBars.template(function(){return{meta:{revision:"Ember@1.13.3",loc:{source:null,start:{line:1,column:0},end:{line:3,column:10}},moduleName:"events-ui/templates/application.hbs"},arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var t=e.createDocumentFragment(),n=e.createElement("h2");e.setAttribute(n,"id","title");var r=e.createTextNode("Welcome to Ember.js");e.appendChild(n,r),e.appendChild(t,n);var n=e.createTextNode("\n\n");e.appendChild(t,n);var n=e.createComment("");return e.appendChild(t,n),t},buildRenderNodes:function(e,t,n){var r=new Array(1);return r[0]=e.createMorphAt(t,2,2,n),e.insertBoundary(t,null),r},statements:[["content","outlet",["loc",[null,[3,0],[3,10]]]]],locals:[],templates:[]}}())}),define("events-ui/templates/area",["exports"],function(e){"use strict";e["default"]=Ember.HTMLBars.template(function(){return{meta:{revision:"Ember@1.13.3",loc:{source:null,start:{line:1,column:0},end:{line:2,column:15}},moduleName:"events-ui/templates/area.hbs"},arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var t=e.createDocumentFragment(),n=e.createComment("");e.appendChild(t,n);var n=e.createTextNode("\nT: ");e.appendChild(t,n);var n=e.createComment("");return e.appendChild(t,n),t},buildRenderNodes:function(e,t,n){var r=new Array(2);return r[0]=e.createMorphAt(t,0,0,n),r[1]=e.createMorphAt(t,2,2,n),e.insertBoundary(t,0),e.insertBoundary(t,null),r},statements:[["content","outlet",["loc",[null,[1,0],[1,10]]]],["content","model.id",["loc",[null,[2,3],[2,15]]]]],locals:[],templates:[]}}())}),define("events-ui/config/environment",["ember"],function(e){var t="events-ui";try{var n=t+"/config/environment",r=e["default"].$('meta[name="'+n+'"]').attr("content"),a=JSON.parse(unescape(r));return{"default":a}}catch(i){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests?require("events-ui/tests/test-helper"):require("events-ui/app")["default"].create({name:"events-ui",version:"0.0.0+8ca74394"});